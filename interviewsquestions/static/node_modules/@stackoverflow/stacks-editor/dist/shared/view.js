export var defaultParserFeatures = {
    snippets: true,
    html: true,
    extraEmphasis: true,
    tables: true,
    tagLinks: {
        allowMetaTags: true,
        allowNonAscii: false,
    },
};
/** Abstract class that contains shared functionality for implementing View */
var BaseView = /** @class */ (function () {
    function BaseView() {
    }
    Object.defineProperty(BaseView.prototype, "document", {
        get: function () {
            return this.editorView.state.doc;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseView.prototype, "dom", {
        get: function () {
            return this.editorView.dom;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseView.prototype, "readonly", {
        get: function () {
            return !this.editorView.editable;
        },
        enumerable: false,
        configurable: true
    });
    BaseView.prototype.focus = function () {
        var _a;
        (_a = this.editorView) === null || _a === void 0 ? void 0 : _a.focus();
    };
    BaseView.prototype.destroy = function () {
        var _a;
        (_a = this.editorView) === null || _a === void 0 ? void 0 : _a.destroy();
    };
    Object.defineProperty(BaseView.prototype, "content", {
        get: function () {
            return this.serializeContent();
        },
        set: function (value) {
            var tr = this.editorView.state.tr;
            var doc = this.editorView.state.doc;
            var newDoc = this.parseContent(value);
            tr = tr.replaceWith(0, doc.content.size, newDoc);
            this.editorView.dispatch(tr);
        },
        enumerable: false,
        configurable: true
    });
    return BaseView;
}());
export { BaseView };
