var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { getBlockLanguage } from "../../shared/highlighting/highlight-plugin";
import { escapeHTML } from "../../shared/utils";
/**
 * View with <code> wrapping/decorations for code_block nodes
 */
var CodeBlockView = /** @class */ (function () {
    function CodeBlockView(node) {
        this.language = null;
        this.dom = document.createElement("div");
        this.dom.classList.add("ps-relative", "p0", "ws-normal", "ow-normal");
        var rawLanguage = this.getLanguageFromBlock(node);
        this.language = rawLanguage;
        this.dom.innerHTML = escapeHTML(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n<div class=\"ps-absolute t2 r4 fs-fine pe-none us-none fc-black-300 js-language-indicator\" contenteditable=false>", "</div>\n<pre class=\"s-code-block\"><code class=\"content-dom\"></code></pre>\n        "], ["\n<div class=\"ps-absolute t2 r4 fs-fine pe-none us-none fc-black-300 js-language-indicator\" contenteditable=false>", "</div>\n<pre class=\"s-code-block\"><code class=\"content-dom\"></code></pre>\n        "])), rawLanguage);
        this.contentDOM = this.dom.querySelector(".content-dom");
    }
    CodeBlockView.prototype.update = function (node) {
        var rawLanguage = this.getLanguageFromBlock(node);
        if (this.language !== rawLanguage) {
            this.dom.querySelector(".js-language-indicator").textContent = rawLanguage;
            this.language = rawLanguage;
        }
        return true;
    };
    CodeBlockView.prototype.getLanguageFromBlock = function (node) {
        var autodetectedLanguage = node.attrs
            .detectedHighlightLanguage;
        if (autodetectedLanguage) {
            // TODO localization
            autodetectedLanguage += " (auto)";
        }
        return autodetectedLanguage || getBlockLanguage(node);
    };
    return CodeBlockView;
}());
export { CodeBlockView };
var templateObject_1;
